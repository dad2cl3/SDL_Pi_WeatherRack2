[
  {
    "id": "8b789c55.9c0f5",
    "type": "mqtt in",
    "z": "30afd561.206fea",
    "name": "",
    "topic": "YOUR-MQTT-TOPIC",
    "qos": "0",
    "datatype": "json",
    "broker": "bc0ed854.c36248",
    "x": 140,
    "y": 100,
    "wires": [["2b94a1b.4af265e"]]
  },
  {
    "id": "2b94a1b.4af265e",
    "type": "switch",
    "z": "30afd561.206fea",
    "name": "Device switch",
    "property": "payload.model",
    "propertyType": "msg",
    "rules": [
      { "t": "eq", "v": "SwitchDoc Labs FT020T AIO", "vt": "str" },
      { "t": "eq", "v": "SwitchDoc Labs F016TH Thermo-Hygrometer", "vt": "str" }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 320,
    "y": 200,
    "wires": [
      ["1932768f.82c249", "585394b.f1bd26c"],
      [
        "b44e95a.23a9668",
        "8fe60ed2.7a97a",
        "1106cc4e.5c7074",
        "7ea56bc1.0d26e4",
        "45947055.2a2bb",
        "4a4f0053.32851"
      ]
    ]
  },
  {
    "id": "b44e95a.23a9668",
    "type": "debug",
    "z": "30afd561.206fea",
    "name": "Indoor sensors",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "x": 480,
    "y": 340,
    "wires": []
  },
  {
    "id": "1932768f.82c249",
    "type": "debug",
    "z": "30afd561.206fea",
    "name": "Outdoor sensors",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "x": 650,
    "y": 120,
    "wires": []
  },
  {
    "id": "9ad6af4a.dff1c",
    "type": "split",
    "z": "30afd561.206fea",
    "name": "Weather rack split",
    "splt": "\\n",
    "spltType": "str",
    "arraySplt": 1,
    "arraySpltType": "len",
    "stream": false,
    "addname": "keys",
    "x": 970,
    "y": 160,
    "wires": [["8c6142fd.9f9d"]]
  },
  {
    "id": "8c6142fd.9f9d",
    "type": "switch",
    "z": "30afd561.206fea",
    "name": "Weather rack switch",
    "property": "keys",
    "propertyType": "msg",
    "rules": [
      { "t": "eq", "v": "time", "vt": "str" },
      { "t": "eq", "v": "batterylow", "vt": "str" },
      { "t": "eq", "v": "avewindspeed", "vt": "str" },
      { "t": "eq", "v": "gustwindspeed", "vt": "str" },
      { "t": "eq", "v": "winddirection", "vt": "str" },
      { "t": "eq", "v": "temperature", "vt": "str" },
      { "t": "eq", "v": "humidity", "vt": "str" },
      { "t": "eq", "v": "light", "vt": "str" },
      { "t": "eq", "v": "uv", "vt": "str" },
      { "t": "eq", "v": "cumulativerain", "vt": "str" }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 10,
    "x": 1200,
    "y": 160,
    "wires": [
      ["f2fb5e15.87c06"],
      ["323c4fdb.2d12a"],
      ["82503bc5.1b2ed8"],
      ["7302bb75.bc6cc4"],
      ["ae4f3ec9.125de"],
      ["a279bd23.6ef51"],
      ["e7b05d29.612d8"],
      ["f849319b.305cc"],
      ["e94106e6.90cf7"],
      ["b59280a9.f605c"]
    ]
  },
  {
    "id": "a279bd23.6ef51",
    "type": "function",
    "z": "30afd561.206fea",
    "name": "Temperature offset",
    "func": "msg.payload = (msg.payload - 400.0)/10.0;\nmsg.pin = 0;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 1710,
    "y": 240,
    "wires": [["6dfd947c.e3f9ac", "832fde6f.000ed"]]
  },
  {
    "id": "82503bc5.1b2ed8",
    "type": "function",
    "z": "30afd561.206fea",
    "name": "Average wind speed",
    "func": "avg = parseFloat(msg.payload/10*3600/1609.344).toFixed(2);\nmsg.payload = avg;\nmsg.pin = 36;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 1740,
    "y": 120,
    "wires": [["6dfd947c.e3f9ac"]]
  },
  {
    "id": "7302bb75.bc6cc4",
    "type": "function",
    "z": "30afd561.206fea",
    "name": "Gust wind speed",
    "func": "gust = parseFloat(msg.payload/10*3600/1609.344).toFixed(2);\nmsg.payload = gust;\nmsg.pin = 37;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 1750,
    "y": 160,
    "wires": [["6dfd947c.e3f9ac"]]
  },
  {
    "id": "323c4fdb.2d12a",
    "type": "function",
    "z": "30afd561.206fea",
    "name": "Battery",
    "func": "if (msg.payload === 0) {\n    msg.payload = \"OK\";\n} else if (msg.payload === 1) {\n    msg.payload = \"LOW\";\n}\n\nmsg.pin = 18;\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 1680,
    "y": 80,
    "wires": [["6dfd947c.e3f9ac"]]
  },
  {
    "id": "b59280a9.f605c",
    "type": "function",
    "z": "30afd561.206fea",
    "name": "Cumulative rain",
    "func": "rain = parseFloat(msg.payload/10/25.4).toFixed(2);\nmsg.payload = rain;\nmsg.pin = 41;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 1740,
    "y": 400,
    "wires": [["6dfd947c.e3f9ac"]]
  },
  {
    "id": "ae4f3ec9.125de",
    "type": "function",
    "z": "30afd561.206fea",
    "name": "Wind direction",
    "func": "quadrants = [\"N\", \"NNE\", \"NE\", \"ENE\", \"E\", \"ESE\", \"SE\", \"SSE\", \"S\", \"SSW\", \"SW\", \"WSW\", \"W\", \"WNW\", \"NW\", \"NNW\", \"N\"];\nquadrant_size = 22.5;\nquadrant = Math.round(msg.payload/quadrant_size);\n\n/*if (quadrant === 0) {\n    abbr = quadrants[0];\n} else {\n    abbr = quadrants[quadrant - 1];\n}*/\nabbr = quadrants[quadrant];\n\nmsg.payload = msg.payload + \"Â° \" + abbr;\nmsg.pin = 38;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 1720,
    "y": 200,
    "wires": [["6dfd947c.e3f9ac"]]
  },
  {
    "id": "e94106e6.90cf7",
    "type": "function",
    "z": "30afd561.206fea",
    "name": "UV index",
    "func": "uv = parseFloat(msg.payload/10).toFixed(1);\nmsg.payload = uv;\nmsg.pin = 40;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 1720,
    "y": 360,
    "wires": [["6dfd947c.e3f9ac"]]
  },
  {
    "id": "8fe60ed2.7a97a",
    "type": "function",
    "z": "30afd561.206fea",
    "name": "Temperature pins",
    "func": "pins = [1, 2, 3, 4, 5, 6, 7, 8];\nmsg.pin = pins[msg.payload.channel - 1];\nmsg.payload = msg.payload.temperature_F;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 1610,
    "y": 760,
    "wires": [["6dfd947c.e3f9ac"]]
  },
  {
    "id": "1106cc4e.5c7074",
    "type": "function",
    "z": "30afd561.206fea",
    "name": "Humidity pins",
    "func": "pins = [10, 11, 12, 13, 14, 15, 16, 17];\nmsg.pin = pins[msg.payload.channel - 1];\nmsg.payload = msg.payload.humidity;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 1600,
    "y": 800,
    "wires": [["6dfd947c.e3f9ac"]]
  },
  {
    "id": "7ea56bc1.0d26e4",
    "type": "function",
    "z": "30afd561.206fea",
    "name": "Battery pins",
    "func": "pins = [19, 20, 21, 22, 23, 24, 25, 26];\nmsg.pin = pins[msg.payload.channel - 1];\nmsg.payload = msg.payload.battery;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 1590,
    "y": 840,
    "wires": [["6dfd947c.e3f9ac"]]
  },
  {
    "id": "45947055.2a2bb",
    "type": "function",
    "z": "30afd561.206fea",
    "name": "Time pins",
    "func": "pins = [28, 29, 30, 31, 32, 33, 34, 35];\nmsg.pin = pins[msg.payload.channel - 1];\nmsg.payload = msg.payload.time;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 1580,
    "y": 880,
    "wires": [["6dfd947c.e3f9ac"]]
  },
  {
    "id": "6dfd947c.e3f9ac",
    "type": "blynk-ws-out-write",
    "z": "30afd561.206fea",
    "name": "Mallory pin",
    "pin": "0",
    "pinmode": "1",
    "client": "68c9e846.6f0f18",
    "x": 2270,
    "y": 120,
    "wires": []
  },
  {
    "id": "f2fb5e15.87c06",
    "type": "function",
    "z": "30afd561.206fea",
    "name": "Time",
    "func": "msg.pin = 27;\nmsg.payload = msg.payload;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 1650,
    "y": 40,
    "wires": [["6dfd947c.e3f9ac"]]
  },
  {
    "id": "e7b05d29.612d8",
    "type": "function",
    "z": "30afd561.206fea",
    "name": "Humidity",
    "func": "msg.pin = 9;\nmsg.payload = msg.payload;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 1700,
    "y": 280,
    "wires": [["6dfd947c.e3f9ac"]]
  },
  {
    "id": "f849319b.305cc",
    "type": "function",
    "z": "30afd561.206fea",
    "name": "Light intensity",
    "func": "msg.payload = msg.payload;\nmsg.pin = 39;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 1740,
    "y": 320,
    "wires": [["6dfd947c.e3f9ac"]]
  },
  {
    "id": "75e77e46.48207",
    "type": "function",
    "z": "30afd561.206fea",
    "name": "Heat index",
    "func": "coefs = [\n    -8.78469475556,\n    1.61139411,\n    2.33854883889,\n    -0.14611605,\n    -0.012308094,\n    -0.0164248277778,\n    0.002211732,\n    0.00072546,\n    -0.000003582\n];\n\ntemp = (msg.payload.temperature - 400.0)/10.0;\nhum = msg.payload.humidity;\n\nif (temp >= 80 && hum >= 40) {\n    // calculate heat index\n    hi = coefs[0];\n    hi += coefs[1]*temp;\n    hi += coefs[2]*hum;\n    hi += coefs[3]*temp*hum;\n    hi += coefs[4]*temp^2;\n    hi += coefs[5]*hum^2;\n    hi += coefs[6]*temp^2*hum;\n    hi += coefs[7]*temp*hum^2;\n    hi += coefs[8]*temp^2*hum^2;\n    hi = parseFloat(hi).toFixed(1);\n} else {\n    hi = \"NA\";\n}\n\nmsg.payload = hi;\nmsg.pin = 42;\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 1750,
    "y": 460,
    "wires": [["6dfd947c.e3f9ac"]]
  },
  {
    "id": "4a4f0053.32851",
    "type": "function",
    "z": "30afd561.206fea",
    "name": "Build query",
    "func": "if (msg.payload.hasOwnProperty('channel')) {\n    channel = msg.payload.channel;\n} else {\n    channel = 0;\n}\n\nsql = \"INSERT INTO weather.t_readings \\n\";\nsql += \"(reading_ts, reading_device, reading_device_channel, reading) \\n\";\nsql += \"VALUES ('\" + msg.payload.time + \"', '\" + msg.payload.model + \"', \" + channel + \", '\" + JSON.stringify(msg.payload) + \"') ON CONFLICT DO NOTHING RETURNING reading_id;\";\n\nmsg.payload = sql;\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 770,
    "y": 280,
    "wires": [["d06fbd9c.f7c95"]]
  },
  {
    "id": "d06fbd9c.f7c95",
    "type": "postgres",
    "z": "30afd561.206fea",
    "postgresdb": "f4bc2308.43aec",
    "name": "Insert data",
    "output": true,
    "perrow": false,
    "rowspermsg": "1",
    "outputs": 1,
    "x": 950,
    "y": 280,
    "wires": [[]]
  },
  {
    "id": "585394b.f1bd26c",
    "type": "function",
    "z": "30afd561.206fea",
    "name": "Validate reading",
    "func": "msg.payload = msg.payload;\n\ntemp = msg.payload.temperature;\nhexTemp = '0x' + temp.toString(16);\n\nif (hexTemp === '0xfff') {\n    msg.payload.process = false;\n} else {\n    msg.payload.process = true;\n}\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 580,
    "y": 180,
    "wires": [["fc87b90f.de6af8"]]
  },
  {
    "id": "fc87b90f.de6af8",
    "type": "switch",
    "z": "30afd561.206fea",
    "name": "Valid reading?",
    "property": "payload.process",
    "propertyType": "msg",
    "rules": [{ "t": "true" }],
    "checkall": "true",
    "repair": false,
    "outputs": 1,
    "x": 780,
    "y": 200,
    "wires": [["9ad6af4a.dff1c", "4a4f0053.32851", "75e77e46.48207"]]
  },
  {
    "id": "bc0ed854.c36248",
    "type": "mqtt-broker",
    "z": "",
    "name": "YOUR-MQTT-BROKER-NAME",
    "broker": "YOUR-MQTT-BROKER-ADDRESS",
    "port": "YOUR-MQTT-BROKER-PORT",
    "clientid": "",
    "usetls": false,
    "compatmode": false,
    "keepalive": "60",
    "cleansession": true,
    "birthTopic": "",
    "birthQos": "0",
    "birthPayload": "",
    "closeTopic": "",
    "closeQos": "0",
    "closePayload": "",
    "willTopic": "",
    "willQos": "0",
    "willPayload": ""
  },
  {
    "id": "68c9e846.6f0f18",
    "type": "blynk-ws-client",
    "z": "",
    "name": "YOUR-BLYNK-APP-NAME",
    "path": "ws://blynk-cloud.com/websockets",
    "key": "YOUR-BLYNK-APP-KEY",
    "dbg_all": false,
    "dbg_read": false,
    "dbg_write": false,
    "dbg_notify": false,
    "dbg_mail": false,
    "dbg_prop": false,
    "dbg_sync": false,
    "dbg_bridge": false,
    "dbg_low": false,
    "dbg_pins": "",
    "multi_cmd": false,
    "proxy_type": "no",
    "proxy_url": "",
    "enabled": true
  },
  {
    "id": "f4bc2308.43aec",
    "type": "postgresdb",
    "z": "",
    "hostname": "YOUR-POSTGRESQL-HOST",
    "port": "YOUR-POSTGRESQL-PORT",
    "db": "YOUR-POSTGRESQL-DATABASE",
    "ssl": false
  }
]
